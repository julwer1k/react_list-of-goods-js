{"version":3,"sources":["Components/GoodItem/GoodItem.jsx","Components/GoodList/GoodList.jsx","App.jsx","index.jsx"],"names":["GoodItem","good","GoodList","goods","map","SORT_BY_ALPHABET","SORT_BY_LENGTH","goodsFromServer","createSortText","sortType","isReversed","result","App","useState","setSortType","setIsReversed","currentGoods","visibleGoods","sortedGoods","sort","good1","good2","localeCompare","length","reverse","updateCurrentGoods","isReset","className","type","cn","onClick","ReactDOM","render","document","getElementById"],"mappings":"iPAEaA,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,oBAAI,UAAQ,OAAZ,SAAoBA,KCATC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,6BAEIA,EAAMC,KAAI,SAAAH,GAAI,OACZ,cAAC,EAAD,CAEEA,KAAMA,GADDA,SCFTI,EAAmB,WACnBC,EAAiB,SAKVC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAwBF,SAASC,EAAeC,EAAUC,GAChC,IAAIC,EAEJ,OAAQF,GACN,KAAKJ,EACHM,EA3CwB,+BA4CxB,MACF,KAAKL,EACHK,EA7CsB,mBA8CtB,MACF,QACEA,EA/CmB,aAuDvB,OAJID,IACFC,GAAU,6BAGLA,EAGF,IAAMC,EAAM,WACjB,MAAgCC,mBAAS,IAAzC,mBAAOJ,EAAP,KAAiBK,EAAjB,KACA,EAAoCD,oBAAS,GAA7C,mBAAOH,EAAP,KAAmBK,EAAnB,KAEMC,EA/CR,SAA4Bb,EAAOM,EAAUC,GAC3C,IAAIO,EAAY,YAAOd,GAEjBe,EAAcD,EAAaE,MAAK,SAACC,EAAOC,GAC5C,OAAQZ,GACN,KAAKJ,EACH,OAAOe,EAAME,cAAcD,GAC7B,KAAKf,EACH,OAAOc,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,MAQb,OAJIb,IACFO,EAAeA,EAAaO,WAGvBd,EAAaO,EAAeC,EA6BdO,CACnBlB,EACAE,EACAC,GAQIgB,EAAUjB,GAAYC,EAE5B,OACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IACE,iBACA,CAAE,WAAYpB,IAAaJ,IAG/ByB,QAAS,WACPhB,EAAYT,IAThB,iCAeA,wBACEuB,KAAK,SACLD,UACEE,IACE,oBACA,CAAE,WAAYpB,IAAaH,IAG/BwB,QAAS,WACPhB,EAAYR,IAThB,4BAeA,wBACEsB,KAAK,SACLD,UACEE,IACE,oBACA,CAAE,WAAYnB,IAGlBoB,QAAS,WACPf,GAAeL,IATnB,qBAgBEgB,GACE,wBACEE,KAAK,SACLD,UAAU,4BACVG,QA5DE,WACZhB,EAAY,IACZC,GAAc,IAuDN,sBAWN,cAAC,EAAD,CAAUZ,MAAOa,IAEjB,6BAAKR,EAAeC,EAAUC,SCjJpCqB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8c552662.chunk.js","sourcesContent":["import React from 'react';\n\nexport const GoodItem = ({ good }) => (\n  <li data-cy=\"Good\">{good}</li>\n);\n","import React from 'react';\nimport { GoodItem } from '../GoodItem';\n\nexport const GoodList = ({ goods }) => (\n  <ul>\n    {\n      goods.map(good => (\n        <GoodItem\n          key={good}\n          good={good}\n        />\n      ))\n    }\n  </ul>\n);\n","import 'bulma/css/bulma.css';\nimport './App.scss';\nimport React, { useState } from 'react';\nimport cn from 'classnames';\nimport { GoodList } from './Components/GoodList';\n\nconst SORT_BY_ALPHABET = 'alphabet';\nconst SORT_BY_LENGTH = 'length';\nconst NAME_SORT_BY_ALPHABET = 'Sorted by alphabetical order';\nconst NAME_SORT_BY_LENGTH = 'Sorted by length';\nconst NAME_SORT_ENOUGH = 'Not sorted';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction updateCurrentGoods(goods, sortType, isReversed) {\n  let visibleGoods = [...goods];\n\n  const sortedGoods = visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SORT_BY_ALPHABET:\n        return good1.localeCompare(good2);\n      case SORT_BY_LENGTH:\n        return good1.length - good2.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods = visibleGoods.reverse();\n  }\n\n  return isReversed ? visibleGoods : sortedGoods;\n}\n\nfunction createSortText(sortType, isReversed) {\n  let result;\n\n  switch (sortType) {\n    case SORT_BY_ALPHABET:\n      result = NAME_SORT_BY_ALPHABET;\n      break;\n    case SORT_BY_LENGTH:\n      result = NAME_SORT_BY_LENGTH;\n      break;\n    default:\n      result = NAME_SORT_ENOUGH;\n      break;\n  }\n\n  if (isReversed) {\n    result += ' and the list is reversed';\n  }\n\n  return result;\n}\n\nexport const App = () => {\n  const [sortType, setSortType] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n\n  const currentGoods = updateCurrentGoods(\n    goodsFromServer,\n    sortType,\n    isReversed,\n  );\n\n  const reset = () => {\n    setSortType('');\n    setIsReversed(false);\n  };\n\n  const isReset = sortType || isReversed;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            cn(\n              'button is-info',\n              { 'is-light': sortType !== SORT_BY_ALPHABET },\n            )\n          }\n          onClick={() => {\n            setSortType(SORT_BY_ALPHABET);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn(\n              'button is-success',\n              { 'is-light': sortType !== SORT_BY_LENGTH },\n            )\n          }\n          onClick={() => {\n            setSortType(SORT_BY_LENGTH);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn(\n              'button is-warning',\n              { 'is-light': isReversed },\n            )\n          }\n          onClick={() => {\n            setIsReversed(!isReversed);\n          }}\n        >\n          Reverse\n        </button>\n\n        {\n          isReset && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={reset}\n            >\n              Reset\n            </button>\n          )\n        }\n      </div>\n\n      <GoodList goods={currentGoods} />\n\n      <h1>{createSortText(sortType, isReversed)}</h1>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}